From 678277a7d55f53fa92933184305fe7677dfec5df Mon Sep 17 00:00:00 2001
From: Mauro Rossi <issor.oruam@gmail.com>
Date: Sun, 2 Jul 2017 01:40:32 +0200
Subject: [PATCH 34/70] net: wireless: broadcom: wl: fix kernel >= 4.8 panic

linux-recent.patch was ok up till kernel 4.7
with kernel 4.8 (and 4.9) new changes are critical to avoid crash

build.mk is modified to apply incremental patch linux-48.patch
copied from https://aur.archlinux.org/cgit/aur.git/tree/?h=broadcom-wl

Reference: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839629
---
 drivers/net/wireless/broadcom/wl/build.mk     |  3 +-
 .../net/wireless/broadcom/wl/linux-48.patch   | 52 +++++++++++++++++++
 2 files changed, 54 insertions(+), 1 deletion(-)
 create mode 100644 drivers/net/wireless/broadcom/wl/linux-48.patch

diff --git a/drivers/net/wireless/broadcom/wl/build.mk b/drivers/net/wireless/broadcom/wl/build.mk
index a8631cb1e732ae..dd7914923d2646 100644
--- a/drivers/net/wireless/broadcom/wl/build.mk
+++ b/drivers/net/wireless/broadcom/wl/build.mk
@@ -11,6 +11,7 @@ $(WL_LIB): $(WL_SRC) $(wildcard $(WL_PATH)/*.patch)
 	$(hide) tar zxf $< -C $(@D) --overwrite -m && \
 		rm -rf $@ && mv $(@D)/lib $@ && touch $@ && \
 		patch -p1 -d $(@D) -i wl.patch && \
-		patch -p1 -d $(@D) -i linux-recent.patch
+		patch -p1 -d $(@D) -i linux-recent.patch && \
+		patch -p1 -d $(@D) -i linux-48.patch
 
 $(INSTALLED_KERNEL_TARGET): $(if $(WL_ENABLED),$(WL_LIB))
diff --git a/drivers/net/wireless/broadcom/wl/linux-48.patch b/drivers/net/wireless/broadcom/wl/linux-48.patch
new file mode 100644
index 00000000000000..0f3e8190622685
--- /dev/null
+++ b/drivers/net/wireless/broadcom/wl/linux-48.patch
@@ -0,0 +1,52 @@
+Reference: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839629
+
+--- a/src/wl/sys/wl_cfg80211_hybrid.c	2016-10-03 10:53:55.588036464 +0200
++++ b/src/wl/sys/wl_cfg80211_hybrid.c	2016-10-03 10:54:11.911695944 +0200
+@@ -2386,8 +2386,15 @@
+ 	s32 err = 0;
+ 
+ 	if (wl->scan_request) {
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 8, 0)
++		struct cfg80211_scan_info info = {
++			.aborted = true
++		};
+ 		WL_DBG(("%s: Aborting scan\n", __FUNCTION__));
+-		cfg80211_scan_done(wl->scan_request, true);     
++		cfg80211_scan_done(wl->scan_request, &info);
++#else
++		cfg80211_scan_done(wl->scan_request, true);
++#endif
+ 		wl->scan_request = NULL;
+ 	}
+ 
+@@ -2488,7 +2495,14 @@
+ 
+ scan_done_out:
+ 	if (wl->scan_request) {
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 8, 0)
++		struct cfg80211_scan_info info = {
++			.aborted = false
++		};
++		cfg80211_scan_done(wl->scan_request, &info);
++#else
+ 		cfg80211_scan_done(wl->scan_request, false);
++#endif
+ 		wl->scan_request = NULL;
+ 	}
+ 	rtnl_unlock();
+@@ -2913,7 +2927,14 @@
+ 	s32 err = 0;
+ 
+ 	if (wl->scan_request) {
+-		cfg80211_scan_done(wl->scan_request, true);	
++#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 8, 0)
++		struct cfg80211_scan_info info = {
++			.aborted = true
++		};
++		cfg80211_scan_done(wl->scan_request, &info);
++#else
++		cfg80211_scan_done(wl->scan_request, true);
++#endif
+ 		wl->scan_request = NULL;
+ 	}
+ 
-- 
2.17.1

